import math

import numpy as np
import serial
import matplotlib.pyplot as plt
import serial.tools.list_ports
import time
import scipy.signal as signal
import pandas as pd
import sympy
import statsmodels.tsa.api as smt
from scipy.integrate import simpson
from sympy import *


def np_move_avg(a,n,mode="same"): #moving average filter
    return(np.convolve(a, np.ones((n,))/n, mode=mode))


n=[1,3,5,7,9,11,10,9,10,11,10,9,10,11,10,9,10,11,10,9,10,11,10,9,10,11,10,9,10,11,10,9,10]
#n=[1,3,5,7,9,11,13,15,13,11,9,11,10,10.1,10.2,10.1,9.9,10,9.8,10,10.3,10,9.8,10,9.9,10.2,10.1,10]
#n=[1,3,5,7,9,11,13,15,13,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]
#n=[10,10.1,10.2,10.1,9.9,10,9.8,10,10.3,10,9.8,10,9.9,10.2,10.1,10,10,10.1,10.2,10.1,9.9,10,9.8,10,10.3,10,9.8,10,9.9,10.2,10.1,10]
c=[ 58.2 ,   69.475 , 81.64 ,  95.155 ,109.455, 124.2 ,  140.055, 156.355 ,173.325,
 189.08 , 205.135, 220.28 , 234.945, 247.54 , 256.39 , 264.37 , 270.125, 276.255,
 280.495 ,283.34 , 285.22 , 286.29 , 286.155 ,284.53 , 281.875, 278.52 , 273.915,
 268.65 , 262.55 , 257.495, 251.895 ,247.08  ,242.265 ,237.635, 233.23 , 229.045,
 224.995, 221.055 ,217.28 , 213.63 , 210.11 , 206.66 , 203.425, 200.19  ,197.05,
 194.07 , 191.12 , 188.25 , 185.485 ,182.79 , 180.21 , 177.695 ,175.225 ,173.28,
 170.955, 168.69 , 166.505, 164.36 , 162.205, 160.49 , 158.855 ,157.03  ,155.2,
 153.44 , 151.635 ,149.755, 148.335, 146.845, 145.82 , 144.87 , 144.44  ,144.175,
 144.745, 145.065, 146.27 , 148.335 ,151.215, 153.075 ,156.785, 160.175, 163.62,
 168.37 , 172.47 , 177.94 , 183.395 ,189.24 , 194.72 , 199.97  ,204.43 , 208.7,
 212.21 , 215.675 ,218.165, 220.325, 222.03 , 222.75 , 222.565 ,223.345, 222.215,
 221.015, 219.665 ,217.215, 215.345, 212.055, 208.835, 205.295 ,201.615, 198.255,
 194.935, 192.015 ,189.18 , 186.735, 184.51 , 182.33 , 180.955 ,179.385 ,178.435,
 177.97 , 177.455 ,177.44 , 177.555, 178.47 , 179.72 , 182.13 , 184.775 ,187.535,
 190.65 , 193.995 ,197.4 ,  200.83 , 204.195, 207.005 ,209.495 ,211.825 ,213.81,
 215.795 ,217.125, 217.995 ,218.89, 219.31 , 219.59 , 219,   218.145 ,216.1,
 213.81 ,211.405 ,208.645, 205.655 ,202.815, 199.83 , 196.91 , 193.92 , 191.34,
 189.255, 187.26 , 185.14 , 183.665 ,182.11 , 181.34 , 180.97,  180.715 ,180.87,
 181.115 ,182.325 ,184.105 ,186.055 ,188.   , 190.36 , 192.725 ,195.465, 198.5,
 201.55 , 204.48 , 206.935 ,209.01 , 211.57,  213.29 , 215.25,  216.31 , 216.935]

n=[ 60.445 , 73.11 ,  86.245, 100.205 ,114.61,  129.085, 143.635 ,157.76 , 171.37,
 184.93 , 198.2 ,  211.135 ,223.54,  232.845, 239.175, 244.73 , 249.6 ,  252.84,
 255.175, 256.48 , 256.39,  254.38,  251.73,  248.06,  243.75 , 239.24,  234.49,
 230.02,  225.89 , 221.685, 217.61,  213.735, 209.97,  206.5  , 203.335, 200.13,
 196.945, 194.145, 191.365, 189.215, 187.37,  185.515 ,184.045 ,182.945, 181.945,
 181.215, 180.965 ,180.6 ,  180.745, 181.06 , 181.515 ,182.22  ,182.91 , 183.71,
 184.575, 185.35 , 186.48,  187.49 , 188.75 , 189.43 , 189.945 ,190.695, 191.21,
 191.535 ,191.935, 192.325, 192.33 , 192.505, 192.585, 192.525 ,192.38 , 192.24,
 192.515, 192.4,   192.16 , 192.475, 192.525, 192.62 , 192.84 , 192.95 , 193.095,
 193.36 , 193.615, 193.96 , 194.395, 194.575 ,194.915, 195.51 , 195.39 , 195.545,
 195.975 ,196.07,  195.905 ,196.185, 196.425, 196.49,  196.695, 196.77 , 196.565,
 196.735, 197.055, 197.055 ,197.045, 197.115 ,197.08,  197.315 ,197.35 , 196.985,
 197.26 , 197.66 , 197.625 ,197.795, 198.055, 197.92,  197.955 ,198.11 , 198.105,
 198.17 , 198.415 ,198.365 ,198.36 , 198.545 ,198.815, 198.775, 198.89 , 198.87,
 198.785, 198.9 ,  199.09 , 198.76,  198.67 , 198.69,  198.61 , 198.59 , 198.545,
 198.66 , 198.615, 198.605, 198.84 , 198.94 , 198.945, 198.945 ,198.59 , 198.7,
 198.725, 198.64 , 198.73 , 198.935, 198.915, 199.135 ,199.25,  199.33,  199.345,
 199.61,  199.66,  199.285, 199.39,  199.675, 199.36 , 199.405, 199.555, 199.325,
 199.55 , 199.585, 199.49 , 199.5 ,  199.52,  199.445 ,199.4,   199.55,  199.76,
 199.65,  199.73,  199.74,  199.695, 199.915 ,200.03 , 199.59,  199.7,   199.685]
exp_val=200
window_length=10
m_std_position=0
fourier=np.fft.rfft(n)
f = pd.Series(n).rolling(window=20, center=False).std()
for i in range(0, len(f)):
       if f[i] < exp_val * 0.01:
            m_std_position = i
            break
print(m_std_position)
plt.figure()
plt.plot(f)
plt.figure()
plt.plot(n)
plt.figure()
plt.plot(fourier)
plt.show()

sample_rate=1/0.11
print(sample_rate)